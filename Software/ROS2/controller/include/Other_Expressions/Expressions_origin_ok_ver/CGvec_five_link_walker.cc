/*
 * Automatically Generated from Mathematica.
 * Wed 20 Sep 2023 15:41:38 GMT-05:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

#include "mdefs.hpp"
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t1420;
  double t1413;
  double t1472;
  double t1479;
  double t1476;
  double t1484;
  double t1490;
  double t1492;
  double t1503;
  double t1504;
  double t1508;
  double t1509;
  double t1511;
  double t1543;
  double t1545;
  double t1546;
  double t1547;
  double t1553;
  double t1555;
  double t1563;
  double t1564;
  double t1566;
  double t1567;
  double t1568;
  double t1570;
  double t1571;
  double t1574;
  double t1577;
  double t1578;
  double t1522;
  double t1594;
  double t1595;
  double t1596;
  double t1588;
  double t1589;
  double t1590;
  double t1584;
  double t1587;
  double t1591;
  double t1597;
  double t1598;
  double t1599;
  double t1600;
  double t1601;
  double t1602;
  double t1603;
  double t1609;
  double t1610;
  double t1611;
  double t1604;
  double t1605;
  double t1608;
  double t1612;
  double t1613;
  double t1614;
  double t1615;
  double t1616;
  double t1617;
  double t1618;
  double t1625;
  double t1627;
  double t1631;
  double t1632;
  double t1633;
  double t1626;
  double t1628;
  double t1629;
  double t1630;
  double t1634;
  double t1635;
  double t1650;
  double t1651;
  double t1652;
  double t1653;
  double t1654;
  double t1655;
  double t1646;
  double t1647;
  double t1648;
  double t1637;
  double t1638;
  double t1639;
  double t1640;
  double t1641;
  double t1642;
  double t1665;
  double t1666;
  double t1668;
  double t1669;
  double t1670;
  double t1691;
  double t1692;
  double t1693;
  double t1687;
  double t1688;
  double t1689;
  double t1636;
  double t1643;
  double t1644;
  double t1706;
  double t1707;
  double t1708;
  double t1709;
  double t1710;
  double t1711;
  double t1712;
  double t1713;
  double t1649;
  double t1656;
  double t1657;
  double t1658;
  double t1659;
  double t1660;
  double t1661;
  double t1662;
  double t1663;
  double t1719;
  double t1729;
  double t1730;
  double t1724;
  double t1725;
  double t1726;
  double t1720;
  double t1667;
  double t1671;
  double t1672;
  double t1743;
  double t1744;
  double t1745;
  double t1674;
  double t1675;
  double t1676;
  double t1677;
  double t1678;
  double t1679;
  double t1680;
  double t1681;
  double t1682;
  double t1683;
  double t1684;
  double t1685;
  double t1751;
  double t1752;
  double t1753;
  double t1754;
  double t1755;
  double t1756;
  double t1757;
  double t1715;
  double t1721;
  double t1722;
  double t1697;
  double t1698;
  double t1699;
  double t1690;
  double t1694;
  double t1695;
  double t1767;
  double t1768;
  double t1769;
  double t1723;
  double t1727;
  double t1728;
  double t1731;
  double t1732;
  double t1733;
  double t1734;
  double t1735;
  double t1736;
  double t1737;
  double t1738;
  double t1762;
  double t1763;
  double t1764;
  double t1765;
  double t1771;
  double t1774;
  double t1776;
  double t1790;
  double t1791;
  double t1792;
  double t1786;
  double t1787;
  double t1788;
  double t1778;
  double t1696;
  double t1700;
  double t1701;
  double t1702;
  double t1766;
  double t1770;
  double t1772;
  double t1773;
  double t1775;
  double t1777;
  double t1779;
  double t1780;
  double t1781;
  double t1789;
  double t1793;
  double t1794;
  double t1795;
  double t1796;
  double t1797;
  double t1798;
  double t1799;
  double t1800;
  double t1808;
  double t1810;
  double t1809;
  double t1811;
  double t1812;
  double t1813;
  double t1814;
  double t1815;
  double t1816;
  double t1817;
  double t1818;
  double t1823;
  double t1824;
  double t1825;
  double t1826;
  double t1827;
  double t1828;
  double t1833;
  double t1834;
  double t1835;
  double t1836;
  double t1837;
  double t1838;
  double t1839;
  double t1840;
  double t1841;
  double t1842;
  double t1820;
  double t1853;
  double t1854;
  double t1855;
  double t1849;
  double t1850;
  double t1851;
  double t1847;
  double t1848;
  double t1852;
  double t1856;
  double t1857;
  double t1858;
  double t1859;
  double t1860;
  double t1861;
  double t1862;
  double t1868;
  double t1869;
  double t1870;
  double t1863;
  double t1864;
  double t1867;
  double t1871;
  double t1872;
  double t1873;
  double t1874;
  double t1875;
  double t1876;
  double t1877;
  double t1884;
  double t1886;
  double t1890;
  double t1891;
  double t1892;
  double t1885;
  double t1887;
  double t1888;
  double t1889;
  double t1893;
  double t1894;
  double t1909;
  double t1910;
  double t1911;
  double t1912;
  double t1913;
  double t1914;
  double t1905;
  double t1906;
  double t1907;
  double t1896;
  double t1897;
  double t1898;
  double t1899;
  double t1900;
  double t1901;
  double t1924;
  double t1925;
  double t1927;
  double t1928;
  double t1929;
  double t1950;
  double t1951;
  double t1952;
  double t1946;
  double t1947;
  double t1948;
  double t1895;
  double t1902;
  double t1903;
  double t1965;
  double t1966;
  double t1967;
  double t1968;
  double t1969;
  double t1970;
  double t1971;
  double t1972;
  double t1908;
  double t1915;
  double t1916;
  double t1917;
  double t1918;
  double t1919;
  double t1920;
  double t1921;
  double t1922;
  double t1978;
  double t1988;
  double t1989;
  double t1983;
  double t1984;
  double t1985;
  double t1979;
  double t1926;
  double t1930;
  double t1931;
  double t2002;
  double t2003;
  double t2004;
  double t1933;
  double t1934;
  double t1935;
  double t1936;
  double t1937;
  double t1938;
  double t1939;
  double t1940;
  double t1941;
  double t1942;
  double t1943;
  double t1944;
  double t2010;
  double t2011;
  double t2012;
  double t2013;
  double t2014;
  double t2015;
  double t2016;
  double t1974;
  double t1980;
  double t1981;
  double t1956;
  double t1957;
  double t1958;
  double t1949;
  double t1953;
  double t1954;
  double t2026;
  double t2027;
  double t2028;
  double t1982;
  double t1986;
  double t1987;
  double t1990;
  double t1991;
  double t1992;
  double t1993;
  double t1994;
  double t1995;
  double t1996;
  double t1997;
  double t2021;
  double t2022;
  double t2023;
  double t2024;
  double t2030;
  double t2033;
  double t2035;
  double t2049;
  double t2050;
  double t2051;
  double t2045;
  double t2046;
  double t2047;
  double t2037;
  double t1955;
  double t1959;
  double t1960;
  double t1961;
  double t2025;
  double t2029;
  double t2031;
  double t2032;
  double t2034;
  double t2036;
  double t2038;
  double t2039;
  double t2040;
  double t2048;
  double t2052;
  double t2053;
  double t2054;
  double t2055;
  double t2056;
  double t2057;
  double t2058;
  double t2059;
  double t1378;
  double t2072;
  double t2073;
  double t2074;
  double t2079;
  double t2080;
  double t1579;
  double t1580;
  double t1581;
  double t2076;
  double t2086;
  double t2087;
  double t2088;
  double t2089;
  double t2090;
  double t2091;
  double t2094;
  double t2095;
  double t2096;
  double t2103;
  double t2104;
  double t2105;
  double t2123;
  double t2124;
  double t2125;
  double t2107;
  double t2108;
  double t2109;
  double t2131;
  double t2132;
  double t2111;
  double t2112;
  double t2113;
  double t2142;
  double t2143;
  double t2144;
  double t1750;
  double t1758;
  double t1759;
  double t1760;
  double t2127;
  double t2133;
  double t2134;
  double t2135;
  double t2136;
  double t2137;
  double t2150;
  double t2151;
  double t2152;
  double t2154;
  double t2116;
  double t2117;
  double t2118;
  double t2119;
  double t2153;
  double t2155;
  double t2156;
  double t2161;
  double t2162;
  double t2163;
  double t2171;
  double t2172;
  double t2173;
  double t2178;
  double t2179;
  double t1843;
  double t1844;
  double t1845;
  double t2175;
  double t2185;
  double t2186;
  double t2187;
  double t2188;
  double t2189;
  double t2190;
  double t2193;
  double t2194;
  double t2195;
  double t2202;
  double t2203;
  double t2204;
  double t2222;
  double t2223;
  double t2224;
  double t2206;
  double t2207;
  double t2208;
  double t2230;
  double t2231;
  double t2210;
  double t2211;
  double t2212;
  double t2241;
  double t2242;
  double t2243;
  double t2009;
  double t2017;
  double t2018;
  double t2019;
  double t2226;
  double t2232;
  double t2233;
  double t2234;
  double t2235;
  double t2236;
  double t2249;
  double t2250;
  double t2251;
  double t2253;
  double t2215;
  double t2216;
  double t2217;
  double t2218;
  double t2252;
  double t2254;
  double t2255;
  double t2260;
  double t2261;
  double t2262;
  double t1419;
  double t1468;
  double t1470;
  double t2068;
  double t2069;
  double t2070;
  double t1622;
  double t1623;
  double t2100;
  double t2101;
  double t2288;
  double t2289;
  double t2290;
  double t2292;
  double t2293;
  double t2294;
  double t2370;
  double t2371;
  double t2372;
  double t2374;
  double t2375;
  double t2376;
  double t2377;
  double t2167;
  double t2168;
  double t2169;
  double t1804;
  double t1805;
  double t1806;
  double t2387;
  double t2388;
  double t2389;
  double t2390;
  double t2393;
  double t2394;
  double t2395;
  double t2396;
  double t2397;
  double t2380;
  double t2381;
  double t2382;
  double t2406;
  double t2407;
  double t2408;
  double t1881;
  double t1882;
  double t2199;
  double t2200;
  double t2421;
  double t2422;
  double t2423;
  double t2425;
  double t2426;
  double t2427;
  double t2503;
  double t2504;
  double t2505;
  double t2507;
  double t2508;
  double t2509;
  double t2510;
  double t2266;
  double t2267;
  double t2268;
  double t2063;
  double t2064;
  double t2065;
  double t2520;
  double t2521;
  double t2522;
  double t2523;
  double t2526;
  double t2527;
  double t2528;
  double t2529;
  double t2530;
  double t2513;
  double t2514;
  double t2515;
  double t2539;
  double t2540;
  double t2541;
  double t2283;
  double t2284;
  double t2285;
  double t2286;
  double t1519;
  double t1536;
  double t2075;
  double t2077;
  double t2552;
  double t2553;
  double t2296;
  double t2297;
  double t2314;
  double t2315;
  double t2316;
  double t2300;
  double t2301;
  double t2302;
  double t2328;
  double t2329;
  double t2330;
  double t2331;
  double t2332;
  double t2333;
  double t2334;
  double t2335;
  double t2336;
  double t2337;
  double t2338;
  double t2339;
  double t2130;
  double t2138;
  double t2139;
  double t1718;
  double t1739;
  double t1740;
  double t2576;
  double t2577;
  double t2578;
  double t2580;
  double t2581;
  double t2582;
  double t2398;
  double t2399;
  double t2122;
  double t2126;
  double t2128;
  double t1705;
  double t1714;
  double t1716;
  double t2652;
  double t2653;
  double t2590;
  double t2591;
  double t2386;
  double t2391;
  double t2605;
  double t2607;
  double t2608;
  double t2612;
  double t2614;
  double t2615;
  double t2416;
  double t2417;
  double t2418;
  double t2419;
  double t1819;
  double t1821;
  double t2174;
  double t2176;
  double t2691;
  double t2692;
  double t2429;
  double t2430;
  double t2447;
  double t2448;
  double t2449;
  double t2433;
  double t2434;
  double t2435;
  double t2461;
  double t2462;
  double t2463;
  double t2464;
  double t2465;
  double t2466;
  double t2467;
  double t2468;
  double t2469;
  double t2470;
  double t2471;
  double t2472;
  double t2229;
  double t2237;
  double t2238;
  double t1977;
  double t1998;
  double t1999;
  double t2715;
  double t2716;
  double t2717;
  double t2719;
  double t2720;
  double t2721;
  double t2531;
  double t2532;
  double t2221;
  double t2225;
  double t2227;
  double t1964;
  double t1973;
  double t1975;
  double t2791;
  double t2792;
  double t2729;
  double t2730;
  double t2519;
  double t2524;
  double t2744;
  double t2746;
  double t2747;
  double t2751;
  double t2753;
  double t2754;
  t1420 = Sin(var1[2]);
  t1413 = Cos(var1[2]);
  t1472 = Cos(var1[3]);
  t1479 = Sin(var1[3]);
  t1476 = -1.*t1472*t1420;
  t1484 = -1.*t1413*t1479;
  t1490 = t1476 + t1484;
  t1492 = -0.05089692188*t1490;
  t1503 = t1413*t1472;
  t1504 = -1.*t1420*t1479;
  t1508 = t1503 + t1504;
  t1509 = 0.0006594708000000001*t1508;
  t1511 = t1492 + t1509;
  t1543 = 1.29308*t1490*t1508;
  t1545 = t1472*t1420;
  t1546 = t1413*t1479;
  t1547 = t1545 + t1546;
  t1553 = 1.29308*t1547*t1508;
  t1555 = t1543 + t1553;
  t1563 = Power(t1490,2);
  t1564 = 0.64654*t1563;
  t1566 = 0.64654*t1490*t1547;
  t1567 = Power(t1508,2);
  t1568 = 0.64654*t1567;
  t1570 = -1.*t1413*t1472;
  t1571 = t1420*t1479;
  t1574 = t1570 + t1571;
  t1577 = 0.64654*t1508*t1574;
  t1578 = t1564 + t1566 + t1568 + t1577;
  t1522 = -0.5*var2[3]*t1511;
  t1594 = -0.00102*t1472;
  t1595 = -0.078722*t1479;
  t1596 = t1594 + t1595;
  t1588 = -0.078722*t1472;
  t1589 = 0.00102*t1479;
  t1590 = t1588 + t1589;
  t1584 = -0.5*var2[0]*t1555;
  t1587 = -0.5*var2[1]*t1578;
  t1591 = t1472*t1590;
  t1597 = t1596*t1479;
  t1598 = t1591 + t1597;
  t1599 = 0.64654*t1490*t1598;
  t1600 = -1.*t1472*t1596;
  t1601 = t1590*t1479;
  t1602 = t1600 + t1601;
  t1603 = 0.64654*t1508*t1602;
  t1609 = 0.00102*t1472;
  t1610 = 0.078722*t1479;
  t1611 = t1609 + t1610;
  t1604 = t1599 + t1603;
  t1605 = -0.5*var2[2]*t1604;
  t1608 = t1472*t1596;
  t1612 = t1472*t1611;
  t1613 = t1608 + t1612;
  t1614 = 0.64654*t1613*t1508;
  t1615 = t1611*t1479;
  t1616 = t1597 + t1615;
  t1617 = 0.64654*t1547*t1616;
  t1618 = t1614 + t1599 + t1603 + t1617;
  t1625 = Cos(var1[4]);
  t1627 = Sin(var1[4]);
  t1631 = t1472*t1625;
  t1632 = -1.*t1479*t1627;
  t1633 = t1631 + t1632;
  t1626 = t1625*t1479;
  t1628 = t1472*t1627;
  t1629 = t1626 + t1628;
  t1630 = -1.*t1420*t1629;
  t1634 = t1413*t1633;
  t1635 = t1630 + t1634;
  t1650 = -1.*t1625;
  t1651 = 1. + t1650;
  t1652 = -0.16*t1651;
  t1653 = -0.167371*t1625;
  t1654 = 0.022663*t1627;
  t1655 = t1652 + t1653 + t1654;
  t1646 = -0.022663*t1625;
  t1647 = -0.007370999999999989*t1627;
  t1648 = t1646 + t1647;
  t1637 = -1.*t1625*t1479;
  t1638 = -1.*t1472*t1627;
  t1639 = t1637 + t1638;
  t1640 = t1413*t1639;
  t1641 = -1.*t1420*t1633;
  t1642 = t1640 + t1641;
  t1665 = t1420*t1639;
  t1666 = t1665 + t1634;
  t1668 = t1413*t1629;
  t1669 = t1420*t1633;
  t1670 = t1668 + t1669;
  t1691 = -1.*t1479*t1648;
  t1692 = t1472*t1655;
  t1693 = t1691 + t1692;
  t1687 = t1472*t1648;
  t1688 = t1479*t1655;
  t1689 = t1687 + t1688;
  t1636 = 0.0033980902199999994*t1635;
  t1643 = -0.0011052077399999983*t1642;
  t1644 = t1636 + t1643;
  t1706 = 0.0033980902199999994*t1666;
  t1707 = -1.*t1472*t1625;
  t1708 = t1479*t1627;
  t1709 = t1707 + t1708;
  t1710 = t1420*t1709;
  t1711 = t1640 + t1710;
  t1712 = -0.0011052077399999983*t1711;
  t1713 = t1706 + t1712;
  t1649 = -1.*t1625*t1648;
  t1656 = t1655*t1627;
  t1657 = t1649 + t1656;
  t1658 = 0.14994*t1657*t1635;
  t1659 = t1625*t1655;
  t1660 = t1648*t1627;
  t1661 = t1659 + t1660;
  t1662 = 0.14994*t1661*t1642;
  t1663 = t1658 + t1662;
  t1719 = 0.14994*t1657*t1666;
  t1729 = -0.007370999999999989*t1625;
  t1730 = t1729 + t1654;
  t1724 = 0.022663*t1625;
  t1725 = 0.007370999999999989*t1627;
  t1726 = t1724 + t1725;
  t1720 = 0.14994*t1661*t1711;
  t1667 = 0.29988*t1666*t1642;
  t1671 = 0.29988*t1635*t1670;
  t1672 = t1667 + t1671;
  t1743 = 0.29988*t1666*t1670;
  t1744 = 0.29988*t1666*t1711;
  t1745 = t1743 + t1744;
  t1674 = -1.*t1420*t1639;
  t1675 = -1.*t1413*t1633;
  t1676 = t1674 + t1675;
  t1677 = 0.14994*t1676*t1666;
  t1678 = Power(t1635,2);
  t1679 = 0.14994*t1678;
  t1680 = Power(t1642,2);
  t1681 = 0.14994*t1680;
  t1682 = -1.*t1413*t1629;
  t1683 = t1682 + t1641;
  t1684 = 0.14994*t1683*t1670;
  t1685 = t1677 + t1679 + t1681 + t1684;
  t1751 = 0.14994*t1666*t1635;
  t1752 = 0.14994*t1642*t1670;
  t1753 = t1413*t1709;
  t1754 = t1674 + t1753;
  t1755 = 0.14994*t1666*t1754;
  t1756 = 0.14994*t1642*t1711;
  t1757 = t1751 + t1752 + t1755 + t1756;
  t1715 = -0.5*var2[4]*t1713;
  t1721 = t1719 + t1720;
  t1722 = -0.5*var2[3]*t1721;
  t1697 = -1.*t1693*t1639;
  t1698 = -1.*t1689*t1633;
  t1699 = t1697 + t1698;
  t1690 = t1689*t1629;
  t1694 = t1693*t1633;
  t1695 = t1690 + t1694;
  t1767 = -1.*t1472*t1648;
  t1768 = -1.*t1479*t1655;
  t1769 = t1767 + t1768;
  t1723 = t1625*t1648;
  t1727 = t1625*t1726;
  t1728 = -1.*t1655*t1627;
  t1731 = t1730*t1627;
  t1732 = t1723 + t1727 + t1728 + t1731;
  t1733 = 0.14994*t1732*t1666;
  t1734 = -1.*t1625*t1730;
  t1735 = t1726*t1627;
  t1736 = t1659 + t1734 + t1660 + t1735;
  t1737 = 0.14994*t1736*t1670;
  t1738 = t1719 + t1733 + t1737 + t1720;
  t1762 = -0.5*var2[0]*t1745;
  t1763 = -0.5*var2[1]*t1757;
  t1764 = 0.14994*t1666*t1699;
  t1765 = t1693*t1639;
  t1771 = t1689*t1633;
  t1774 = 0.14994*t1695*t1711;
  t1776 = -1.*t1689*t1639;
  t1790 = t1472*t1726;
  t1791 = -1.*t1479*t1730;
  t1792 = t1790 + t1791;
  t1786 = t1479*t1726;
  t1787 = t1472*t1730;
  t1788 = t1786 + t1787;
  t1778 = -1.*t1693*t1709;
  t1696 = 0.14994*t1642*t1695;
  t1700 = 0.14994*t1635*t1699;
  t1701 = t1696 + t1700;
  t1702 = -0.5*var2[2]*t1701;
  t1766 = t1693*t1629;
  t1770 = t1769*t1633;
  t1772 = t1765 + t1766 + t1770 + t1771;
  t1773 = 0.14994*t1666*t1772;
  t1775 = -1.*t1769*t1639;
  t1777 = -1.*t1693*t1633;
  t1779 = t1775 + t1776 + t1777 + t1778;
  t1780 = 0.14994*t1670*t1779;
  t1781 = t1764 + t1773 + t1774 + t1780;
  t1789 = t1788*t1629;
  t1793 = t1792*t1633;
  t1794 = t1765 + t1789 + t1771 + t1793;
  t1795 = 0.14994*t1666*t1794;
  t1796 = -1.*t1792*t1639;
  t1797 = -1.*t1788*t1633;
  t1798 = t1776 + t1796 + t1797 + t1778;
  t1799 = 0.14994*t1670*t1798;
  t1800 = t1764 + t1795 + t1774 + t1799;
  t1808 = Cos(var1[5]);
  t1810 = Sin(var1[5]);
  t1809 = -1.*t1808*t1420;
  t1811 = -1.*t1413*t1810;
  t1812 = t1809 + t1811;
  t1813 = -0.050811930850000006*t1812;
  t1814 = t1413*t1808;
  t1815 = -1.*t1420*t1810;
  t1816 = t1814 + t1815;
  t1817 = 0.00071645048*t1816;
  t1818 = t1813 + t1817;
  t1823 = 1.28858*t1812*t1816;
  t1824 = t1808*t1420;
  t1825 = t1413*t1810;
  t1826 = t1824 + t1825;
  t1827 = 1.28858*t1826*t1816;
  t1828 = t1823 + t1827;
  t1833 = Power(t1812,2);
  t1834 = 0.64429*t1833;
  t1835 = 0.64429*t1812*t1826;
  t1836 = Power(t1816,2);
  t1837 = 0.64429*t1836;
  t1838 = -1.*t1413*t1808;
  t1839 = t1420*t1810;
  t1840 = t1838 + t1839;
  t1841 = 0.64429*t1816*t1840;
  t1842 = t1834 + t1835 + t1837 + t1841;
  t1820 = -0.5*var2[5]*t1818;
  t1853 = -0.001112*t1808;
  t1854 = -0.078865*t1810;
  t1855 = t1853 + t1854;
  t1849 = -0.078865*t1808;
  t1850 = 0.001112*t1810;
  t1851 = t1849 + t1850;
  t1847 = -0.5*var2[0]*t1828;
  t1848 = -0.5*var2[1]*t1842;
  t1852 = t1808*t1851;
  t1856 = t1855*t1810;
  t1857 = t1852 + t1856;
  t1858 = 0.64429*t1812*t1857;
  t1859 = -1.*t1808*t1855;
  t1860 = t1851*t1810;
  t1861 = t1859 + t1860;
  t1862 = 0.64429*t1816*t1861;
  t1868 = 0.001112*t1808;
  t1869 = 0.078865*t1810;
  t1870 = t1868 + t1869;
  t1863 = t1858 + t1862;
  t1864 = -0.5*var2[2]*t1863;
  t1867 = t1808*t1855;
  t1871 = t1808*t1870;
  t1872 = t1867 + t1871;
  t1873 = 0.64429*t1872*t1816;
  t1874 = t1870*t1810;
  t1875 = t1856 + t1874;
  t1876 = 0.64429*t1826*t1875;
  t1877 = t1873 + t1858 + t1862 + t1876;
  t1884 = Cos(var1[6]);
  t1886 = Sin(var1[6]);
  t1890 = t1808*t1884;
  t1891 = -1.*t1810*t1886;
  t1892 = t1890 + t1891;
  t1885 = t1884*t1810;
  t1887 = t1808*t1886;
  t1888 = t1885 + t1887;
  t1889 = -1.*t1420*t1888;
  t1893 = t1413*t1892;
  t1894 = t1889 + t1893;
  t1909 = -1.*t1884;
  t1910 = 1. + t1909;
  t1911 = -0.16*t1910;
  t1912 = -0.167368*t1884;
  t1913 = 0.022659*t1886;
  t1914 = t1911 + t1912 + t1913;
  t1905 = -0.022659*t1884;
  t1906 = -0.007367999999999986*t1886;
  t1907 = t1905 + t1906;
  t1896 = -1.*t1884*t1810;
  t1897 = -1.*t1808*t1886;
  t1898 = t1896 + t1897;
  t1899 = t1413*t1898;
  t1900 = -1.*t1420*t1892;
  t1901 = t1899 + t1900;
  t1924 = t1420*t1898;
  t1925 = t1924 + t1893;
  t1927 = t1413*t1888;
  t1928 = t1420*t1892;
  t1929 = t1927 + t1928;
  t1950 = -1.*t1810*t1907;
  t1951 = t1808*t1914;
  t1952 = t1950 + t1951;
  t1946 = t1808*t1907;
  t1947 = t1810*t1914;
  t1948 = t1946 + t1947;
  t1895 = 0.0033974904599999994*t1894;
  t1902 = -0.0011047579199999977*t1901;
  t1903 = t1895 + t1902;
  t1965 = 0.0033974904599999994*t1925;
  t1966 = -1.*t1808*t1884;
  t1967 = t1810*t1886;
  t1968 = t1966 + t1967;
  t1969 = t1420*t1968;
  t1970 = t1899 + t1969;
  t1971 = -0.0011047579199999977*t1970;
  t1972 = t1965 + t1971;
  t1908 = -1.*t1884*t1907;
  t1915 = t1914*t1886;
  t1916 = t1908 + t1915;
  t1917 = 0.14994*t1916*t1894;
  t1918 = t1884*t1914;
  t1919 = t1907*t1886;
  t1920 = t1918 + t1919;
  t1921 = 0.14994*t1920*t1901;
  t1922 = t1917 + t1921;
  t1978 = 0.14994*t1916*t1925;
  t1988 = -0.007367999999999986*t1884;
  t1989 = t1988 + t1913;
  t1983 = 0.022659*t1884;
  t1984 = 0.007367999999999986*t1886;
  t1985 = t1983 + t1984;
  t1979 = 0.14994*t1920*t1970;
  t1926 = 0.29988*t1925*t1901;
  t1930 = 0.29988*t1894*t1929;
  t1931 = t1926 + t1930;
  t2002 = 0.29988*t1925*t1929;
  t2003 = 0.29988*t1925*t1970;
  t2004 = t2002 + t2003;
  t1933 = -1.*t1420*t1898;
  t1934 = -1.*t1413*t1892;
  t1935 = t1933 + t1934;
  t1936 = 0.14994*t1935*t1925;
  t1937 = Power(t1894,2);
  t1938 = 0.14994*t1937;
  t1939 = Power(t1901,2);
  t1940 = 0.14994*t1939;
  t1941 = -1.*t1413*t1888;
  t1942 = t1941 + t1900;
  t1943 = 0.14994*t1942*t1929;
  t1944 = t1936 + t1938 + t1940 + t1943;
  t2010 = 0.14994*t1925*t1894;
  t2011 = 0.14994*t1901*t1929;
  t2012 = t1413*t1968;
  t2013 = t1933 + t2012;
  t2014 = 0.14994*t1925*t2013;
  t2015 = 0.14994*t1901*t1970;
  t2016 = t2010 + t2011 + t2014 + t2015;
  t1974 = -0.5*var2[6]*t1972;
  t1980 = t1978 + t1979;
  t1981 = -0.5*var2[5]*t1980;
  t1956 = -1.*t1952*t1898;
  t1957 = -1.*t1948*t1892;
  t1958 = t1956 + t1957;
  t1949 = t1948*t1888;
  t1953 = t1952*t1892;
  t1954 = t1949 + t1953;
  t2026 = -1.*t1808*t1907;
  t2027 = -1.*t1810*t1914;
  t2028 = t2026 + t2027;
  t1982 = t1884*t1907;
  t1986 = t1884*t1985;
  t1987 = -1.*t1914*t1886;
  t1990 = t1989*t1886;
  t1991 = t1982 + t1986 + t1987 + t1990;
  t1992 = 0.14994*t1991*t1925;
  t1993 = -1.*t1884*t1989;
  t1994 = t1985*t1886;
  t1995 = t1918 + t1993 + t1919 + t1994;
  t1996 = 0.14994*t1995*t1929;
  t1997 = t1978 + t1992 + t1996 + t1979;
  t2021 = -0.5*var2[0]*t2004;
  t2022 = -0.5*var2[1]*t2016;
  t2023 = 0.14994*t1925*t1958;
  t2024 = t1952*t1898;
  t2030 = t1948*t1892;
  t2033 = 0.14994*t1954*t1970;
  t2035 = -1.*t1948*t1898;
  t2049 = t1808*t1985;
  t2050 = -1.*t1810*t1989;
  t2051 = t2049 + t2050;
  t2045 = t1810*t1985;
  t2046 = t1808*t1989;
  t2047 = t2045 + t2046;
  t2037 = -1.*t1952*t1968;
  t1955 = 0.14994*t1901*t1954;
  t1959 = 0.14994*t1894*t1958;
  t1960 = t1955 + t1959;
  t1961 = -0.5*var2[2]*t1960;
  t2025 = t1952*t1888;
  t2029 = t2028*t1892;
  t2031 = t2024 + t2025 + t2029 + t2030;
  t2032 = 0.14994*t1925*t2031;
  t2034 = -1.*t2028*t1898;
  t2036 = -1.*t1952*t1892;
  t2038 = t2034 + t2035 + t2036 + t2037;
  t2039 = 0.14994*t1929*t2038;
  t2040 = t2023 + t2032 + t2033 + t2039;
  t2048 = t2047*t1888;
  t2052 = t2051*t1892;
  t2053 = t2024 + t2048 + t2030 + t2052;
  t2054 = 0.14994*t1925*t2053;
  t2055 = -1.*t2051*t1898;
  t2056 = -1.*t2047*t1892;
  t2057 = t2035 + t2055 + t2056 + t2037;
  t2058 = 0.14994*t1929*t2057;
  t2059 = t2023 + t2054 + t2033 + t2058;
  t1378 = Power(var2[2],2);
  t2072 = 0.0006594708000000001*t1490;
  t2073 = -0.05089692188*t1574;
  t2074 = t2072 + t2073;
  t2079 = 1.29308*t1490*t1574;
  t2080 = t1543 + t2079;
  t1579 = -0.5*var2[2]*t1578;
  t1580 = -0.5*var2[3]*t1578;
  t1581 = t1579 + t1580;
  t2076 = -0.5*var2[3]*t2074;
  t2086 = -0.5*var2[1]*t2080;
  t2087 = -0.5*var2[0]*t1578;
  t2088 = 0.64654*t1574*t1598;
  t2089 = 0.64654*t1490*t1602;
  t2090 = t2088 + t2089;
  t2091 = -0.5*var2[2]*t2090;
  t2094 = 0.64654*t1613*t1490;
  t2095 = 0.64654*t1508*t1616;
  t2096 = t2094 + t2088 + t2089 + t2095;
  t2103 = -0.0011052077399999983*t1676;
  t2104 = 0.0033980902199999994*t1683;
  t2105 = t2103 + t2104;
  t2123 = 0.0033980902199999994*t1642;
  t2124 = -0.0011052077399999983*t1754;
  t2125 = t2123 + t2124;
  t2107 = 0.14994*t1661*t1676;
  t2108 = 0.14994*t1657*t1683;
  t2109 = t2107 + t2108;
  t2131 = 0.14994*t1657*t1642;
  t2132 = 0.14994*t1661*t1754;
  t2111 = 0.29988*t1676*t1642;
  t2112 = 0.29988*t1635*t1683;
  t2113 = t2111 + t2112;
  t2142 = 0.29988*t1635*t1642;
  t2143 = 0.29988*t1642*t1754;
  t2144 = t2142 + t2143;
  t1750 = -0.5*var2[2]*t1685;
  t1758 = -0.5*var2[3]*t1757;
  t1759 = -0.5*var2[4]*t1757;
  t1760 = t1750 + t1758 + t1759;
  t2127 = -0.5*var2[4]*t2125;
  t2133 = t2131 + t2132;
  t2134 = -0.5*var2[3]*t2133;
  t2135 = 0.14994*t1736*t1635;
  t2136 = 0.14994*t1732*t1642;
  t2137 = t2135 + t2131 + t2136 + t2132;
  t2150 = -0.5*var2[1]*t2144;
  t2151 = -0.5*var2[0]*t1757;
  t2152 = 0.14994*t1642*t1699;
  t2154 = 0.14994*t1695*t1754;
  t2116 = 0.14994*t1676*t1695;
  t2117 = 0.14994*t1683*t1699;
  t2118 = t2116 + t2117;
  t2119 = -0.5*var2[2]*t2118;
  t2153 = 0.14994*t1642*t1772;
  t2155 = 0.14994*t1635*t1779;
  t2156 = t2152 + t2153 + t2154 + t2155;
  t2161 = 0.14994*t1642*t1794;
  t2162 = 0.14994*t1635*t1798;
  t2163 = t2152 + t2161 + t2154 + t2162;
  t2171 = 0.00071645048*t1812;
  t2172 = -0.050811930850000006*t1840;
  t2173 = t2171 + t2172;
  t2178 = 1.28858*t1812*t1840;
  t2179 = t1823 + t2178;
  t1843 = -0.5*var2[2]*t1842;
  t1844 = -0.5*var2[5]*t1842;
  t1845 = t1843 + t1844;
  t2175 = -0.5*var2[5]*t2173;
  t2185 = -0.5*var2[1]*t2179;
  t2186 = -0.5*var2[0]*t1842;
  t2187 = 0.64429*t1840*t1857;
  t2188 = 0.64429*t1812*t1861;
  t2189 = t2187 + t2188;
  t2190 = -0.5*var2[2]*t2189;
  t2193 = 0.64429*t1872*t1812;
  t2194 = 0.64429*t1816*t1875;
  t2195 = t2193 + t2187 + t2188 + t2194;
  t2202 = -0.0011047579199999977*t1935;
  t2203 = 0.0033974904599999994*t1942;
  t2204 = t2202 + t2203;
  t2222 = 0.0033974904599999994*t1901;
  t2223 = -0.0011047579199999977*t2013;
  t2224 = t2222 + t2223;
  t2206 = 0.14994*t1920*t1935;
  t2207 = 0.14994*t1916*t1942;
  t2208 = t2206 + t2207;
  t2230 = 0.14994*t1916*t1901;
  t2231 = 0.14994*t1920*t2013;
  t2210 = 0.29988*t1935*t1901;
  t2211 = 0.29988*t1894*t1942;
  t2212 = t2210 + t2211;
  t2241 = 0.29988*t1894*t1901;
  t2242 = 0.29988*t1901*t2013;
  t2243 = t2241 + t2242;
  t2009 = -0.5*var2[2]*t1944;
  t2017 = -0.5*var2[5]*t2016;
  t2018 = -0.5*var2[6]*t2016;
  t2019 = t2009 + t2017 + t2018;
  t2226 = -0.5*var2[6]*t2224;
  t2232 = t2230 + t2231;
  t2233 = -0.5*var2[5]*t2232;
  t2234 = 0.14994*t1995*t1894;
  t2235 = 0.14994*t1991*t1901;
  t2236 = t2234 + t2230 + t2235 + t2231;
  t2249 = -0.5*var2[1]*t2243;
  t2250 = -0.5*var2[0]*t2016;
  t2251 = 0.14994*t1901*t1958;
  t2253 = 0.14994*t1954*t2013;
  t2215 = 0.14994*t1935*t1954;
  t2216 = 0.14994*t1942*t1958;
  t2217 = t2215 + t2216;
  t2218 = -0.5*var2[2]*t2217;
  t2252 = 0.14994*t1901*t2031;
  t2254 = 0.14994*t1894*t2038;
  t2255 = t2251 + t2252 + t2253 + t2254;
  t2260 = 0.14994*t1901*t2053;
  t2261 = 0.14994*t1894*t2057;
  t2262 = t2251 + t2260 + t2253 + t2261;
  t1419 = -0.0000524874*t1413;
  t1468 = -0.0099626084*t1420;
  t1470 = t1419 + t1468;
  t2068 = -0.0099626084*t1413;
  t2069 = 0.0000524874*t1420;
  t2070 = t2068 + t2069;
  t1622 = -0.5*var2[3]*t1618;
  t1623 = t1605 + t1622;
  t2100 = -0.5*var2[3]*t2096;
  t2101 = t2091 + t2100;
  t2288 = -0.05089692188*t1613;
  t2289 = 0.0006594708000000001*t1616;
  t2290 = t2288 + t2289;
  t2292 = 1.29308*t1613*t1598;
  t2293 = 1.29308*t1602*t1616;
  t2294 = t2292 + t2293;
  t2370 = -0.0011052077399999983*t1772;
  t2371 = 0.0033980902199999994*t1779;
  t2372 = t2370 + t2371;
  t2374 = 0.14994*t1661*t1772;
  t2375 = 0.14994*t1657*t1779;
  t2376 = t2374 + t2375;
  t2377 = -0.5*var2[3]*t2376;
  t2167 = -0.5*var2[3]*t2156;
  t2168 = -0.5*var2[4]*t2163;
  t2169 = t2119 + t2167 + t2168;
  t1804 = -0.5*var2[3]*t1781;
  t1805 = -0.5*var2[4]*t1800;
  t1806 = t1702 + t1804 + t1805;
  t2387 = -0.0011052077399999983*t1794;
  t2388 = 0.0033980902199999994*t1798;
  t2389 = t2387 + t2388;
  t2390 = -0.5*var2[4]*t2389;
  t2393 = 0.14994*t1732*t1695;
  t2394 = 0.14994*t1736*t1699;
  t2395 = 0.14994*t1661*t1794;
  t2396 = 0.14994*t1657*t1798;
  t2397 = t2393 + t2394 + t2395 + t2396;
  t2380 = 0.29988*t1695*t1772;
  t2381 = 0.29988*t1699*t1779;
  t2382 = t2380 + t2381;
  t2406 = 0.29988*t1695*t1794;
  t2407 = 0.29988*t1699*t1798;
  t2408 = t2406 + t2407;
  t1881 = -0.5*var2[5]*t1877;
  t1882 = t1864 + t1881;
  t2199 = -0.5*var2[5]*t2195;
  t2200 = t2190 + t2199;
  t2421 = -0.050811930850000006*t1872;
  t2422 = 0.00071645048*t1875;
  t2423 = t2421 + t2422;
  t2425 = 1.28858*t1872*t1857;
  t2426 = 1.28858*t1861*t1875;
  t2427 = t2425 + t2426;
  t2503 = -0.0011047579199999977*t2031;
  t2504 = 0.0033974904599999994*t2038;
  t2505 = t2503 + t2504;
  t2507 = 0.14994*t1920*t2031;
  t2508 = 0.14994*t1916*t2038;
  t2509 = t2507 + t2508;
  t2510 = -0.5*var2[5]*t2509;
  t2266 = -0.5*var2[5]*t2255;
  t2267 = -0.5*var2[6]*t2262;
  t2268 = t2218 + t2266 + t2267;
  t2063 = -0.5*var2[5]*t2040;
  t2064 = -0.5*var2[6]*t2059;
  t2065 = t1961 + t2063 + t2064;
  t2520 = -0.0011047579199999977*t2053;
  t2521 = 0.0033974904599999994*t2057;
  t2522 = t2520 + t2521;
  t2523 = -0.5*var2[6]*t2522;
  t2526 = 0.14994*t1991*t1954;
  t2527 = 0.14994*t1995*t1958;
  t2528 = 0.14994*t1920*t2053;
  t2529 = 0.14994*t1916*t2057;
  t2530 = t2526 + t2527 + t2528 + t2529;
  t2513 = 0.29988*t1954*t2031;
  t2514 = 0.29988*t1958*t2038;
  t2515 = t2513 + t2514;
  t2539 = 0.29988*t1954*t2053;
  t2540 = 0.29988*t1958*t2057;
  t2541 = t2539 + t2540;
  t2283 = -0.078722*t1490;
  t2284 = -0.00102*t1574;
  t2285 = t2283 + t2284;
  t2286 = -6.3425574000000005*t2285;
  t1519 = -0.5*var2[2]*t1511;
  t1536 = t1519 + t1522;
  t2075 = -0.5*var2[2]*t2074;
  t2077 = t2075 + t2076;
  t2552 = -0.5*var2[0]*t1511;
  t2553 = -0.5*var2[1]*t2074;
  t2296 = 0.5*var2[0]*t1511;
  t2297 = 0.5*var2[1]*t2074;
  t2314 = 0.5*var2[3]*t1511;
  t2315 = 0.5*var2[0]*t1555;
  t2316 = 0.5*var2[1]*t1578;
  t2300 = 0.5*var2[3]*t2074;
  t2301 = 0.5*var2[1]*t2080;
  t2302 = 0.5*var2[0]*t1578;
  t2328 = -0.16*t1651*t1490;
  t2329 = 0.16*t1574*t1627;
  t2330 = t1625*t1574;
  t2331 = -1.*t1490*t1627;
  t2332 = t2330 + t2331;
  t2333 = -0.022663*t2332;
  t2334 = t1625*t1490;
  t2335 = t1574*t1627;
  t2336 = t2334 + t2335;
  t2337 = -0.167371*t2336;
  t2338 = t2328 + t2329 + t2333 + t2337;
  t2339 = -1.4709113999999999*t2338;
  t2130 = -0.5*var2[2]*t2109;
  t2138 = -0.5*var2[4]*t2137;
  t2139 = t2130 + t2134 + t2138;
  t1718 = -0.5*var2[2]*t1663;
  t1739 = -0.5*var2[4]*t1738;
  t1740 = t1718 + t1722 + t1739;
  t2576 = 0.0033980902199999994*t1736;
  t2577 = -0.0011052077399999983*t1732;
  t2578 = t2576 + t2577;
  t2580 = 0.29988*t1736*t1657;
  t2581 = 0.29988*t1661*t1732;
  t2582 = t2580 + t2581;
  t2398 = -0.5*var2[4]*t2397;
  t2399 = t2377 + t2398;
  t2122 = -0.5*var2[2]*t2105;
  t2126 = -0.5*var2[3]*t2125;
  t2128 = t2122 + t2126 + t2127;
  t1705 = -0.5*var2[2]*t1644;
  t1714 = -0.5*var2[3]*t1713;
  t1716 = t1705 + t1714 + t1715;
  t2652 = -0.5*var2[1]*t2125;
  t2653 = -0.5*var2[0]*t1713;
  t2590 = 0.5*var2[1]*t2125;
  t2591 = 0.5*var2[0]*t1713;
  t2386 = -0.5*var2[3]*t2372;
  t2391 = t2386 + t2390;
  t2605 = 0.5*var2[4]*t2125;
  t2607 = 0.5*var2[1]*t2144;
  t2608 = 0.5*var2[0]*t1757;
  t2612 = 0.5*var2[4]*t1713;
  t2614 = 0.5*var2[0]*t1745;
  t2615 = 0.5*var2[1]*t1757;
  t2416 = -0.078865*t1812;
  t2417 = -0.001112*t1840;
  t2418 = t2416 + t2417;
  t2419 = -6.3204849*t2418;
  t1819 = -0.5*var2[2]*t1818;
  t1821 = t1819 + t1820;
  t2174 = -0.5*var2[2]*t2173;
  t2176 = t2174 + t2175;
  t2691 = -0.5*var2[0]*t1818;
  t2692 = -0.5*var2[1]*t2173;
  t2429 = 0.5*var2[0]*t1818;
  t2430 = 0.5*var2[1]*t2173;
  t2447 = 0.5*var2[5]*t1818;
  t2448 = 0.5*var2[0]*t1828;
  t2449 = 0.5*var2[1]*t1842;
  t2433 = 0.5*var2[5]*t2173;
  t2434 = 0.5*var2[1]*t2179;
  t2435 = 0.5*var2[0]*t1842;
  t2461 = -0.16*t1910*t1812;
  t2462 = 0.16*t1840*t1886;
  t2463 = t1884*t1840;
  t2464 = -1.*t1812*t1886;
  t2465 = t2463 + t2464;
  t2466 = -0.022659*t2465;
  t2467 = t1884*t1812;
  t2468 = t1840*t1886;
  t2469 = t2467 + t2468;
  t2470 = -0.167368*t2469;
  t2471 = t2461 + t2462 + t2466 + t2470;
  t2472 = -1.4709113999999999*t2471;
  t2229 = -0.5*var2[2]*t2208;
  t2237 = -0.5*var2[6]*t2236;
  t2238 = t2229 + t2233 + t2237;
  t1977 = -0.5*var2[2]*t1922;
  t1998 = -0.5*var2[6]*t1997;
  t1999 = t1977 + t1981 + t1998;
  t2715 = 0.0033974904599999994*t1995;
  t2716 = -0.0011047579199999977*t1991;
  t2717 = t2715 + t2716;
  t2719 = 0.29988*t1995*t1916;
  t2720 = 0.29988*t1920*t1991;
  t2721 = t2719 + t2720;
  t2531 = -0.5*var2[6]*t2530;
  t2532 = t2510 + t2531;
  t2221 = -0.5*var2[2]*t2204;
  t2225 = -0.5*var2[5]*t2224;
  t2227 = t2221 + t2225 + t2226;
  t1964 = -0.5*var2[2]*t1903;
  t1973 = -0.5*var2[5]*t1972;
  t1975 = t1964 + t1973 + t1974;
  t2791 = -0.5*var2[1]*t2224;
  t2792 = -0.5*var2[0]*t1972;
  t2729 = 0.5*var2[1]*t2224;
  t2730 = 0.5*var2[0]*t1972;
  t2519 = -0.5*var2[5]*t2505;
  t2524 = t2519 + t2523;
  t2744 = 0.5*var2[6]*t2224;
  t2746 = 0.5*var2[1]*t2243;
  t2747 = 0.5*var2[0]*t2016;
  t2751 = 0.5*var2[6]*t1972;
  t2753 = 0.5*var2[0]*t2004;
  t2754 = 0.5*var2[1]*t2016;
  p_output1[0]=-1.*t1378*t1470 + t1581*var2[1] + t1760*var2[1] + t1845*var2[1] + t2019*var2[1] + (t1522 + t1584 + t1587 + t1605)*var2[2] + t1623*var2[2] + t1806*var2[2] + (t1820 + t1847 + t1848 + t1864)*var2[2] + t1882*var2[2] + t2065*var2[2] + t1536*var2[3] + t1740*var2[3] + (t1522 + t1584 + t1587 - 0.5*t1618*var2[2])*var2[3] + (t1715 + t1722 + t1762 + t1763 - 0.5*t1781*var2[2])*var2[3] + var2[0]*(-0.5*t1555*var2[2] - 0.5*t1555*var2[3]) + t1716*var2[4] + (t1715 + t1762 + t1763 - 0.5*t1800*var2[2] - 0.5*t1738*var2[3])*var2[4] + var2[2]*(t1702 - 0.5*t1672*var2[0] - 0.5*t1685*var2[1] - 0.5*t1663*var2[3] - 0.5*t1644*var2[4]) + var2[0]*(-0.5*t1672*var2[2] - 0.5*t1745*var2[3] - 0.5*t1745*var2[4]) + t1821*var2[5] + t1999*var2[5] + (t1820 + t1847 + t1848 - 0.5*t1877*var2[2])*var2[5] + (t1974 + t1981 + t2021 + t2022 - 0.5*t2040*var2[2])*var2[5] + var2[0]*(-0.5*t1828*var2[2] - 0.5*t1828*var2[5]) + t1975*var2[6] + (t1974 + t2021 + t2022 - 0.5*t2059*var2[2] - 0.5*t1997*var2[5])*var2[6] + var2[2]*(t1961 - 0.5*t1931*var2[0] - 0.5*t1944*var2[1] - 0.5*t1922*var2[5] - 0.5*t1903*var2[6]) + var2[0]*(-0.5*t1931*var2[2] - 0.5*t2004*var2[5] - 0.5*t2004*var2[6]);
  p_output1[1]=-27.864422100000002 - 1.*t1378*t2070 + t1581*var2[0] + t1760*var2[0] + t1845*var2[0] + t2019*var2[0] + (t2076 + t2086 + t2087 + t2091)*var2[2] + t2101*var2[2] + t2169*var2[2] + (t2175 + t2185 + t2186 + t2190)*var2[2] + t2200*var2[2] + t2268*var2[2] + t2077*var2[3] + t2139*var2[3] + (t2076 + t2086 + t2087 - 0.5*t2096*var2[2])*var2[3] + (t2127 + t2134 + t2150 + t2151 - 0.5*t2156*var2[2])*var2[3] + var2[1]*(-0.5*t2080*var2[2] - 0.5*t2080*var2[3]) + t2128*var2[4] + (t2127 + t2150 + t2151 - 0.5*t2163*var2[2] - 0.5*t2137*var2[3])*var2[4] + var2[2]*(t2119 - 0.5*t1685*var2[0] - 0.5*t2113*var2[1] - 0.5*t2109*var2[3] - 0.5*t2105*var2[4]) + var2[1]*(-0.5*t2113*var2[2] - 0.5*t2144*var2[3] - 0.5*t2144*var2[4]) + t2176*var2[5] + t2238*var2[5] + (t2175 + t2185 + t2186 - 0.5*t2195*var2[2])*var2[5] + (t2226 + t2233 + t2249 + t2250 - 0.5*t2255*var2[2])*var2[5] + var2[1]*(-0.5*t2179*var2[2] - 0.5*t2179*var2[5]) + t2227*var2[6] + (t2226 + t2249 + t2250 - 0.5*t2262*var2[2] - 0.5*t2236*var2[5])*var2[6] + var2[2]*(t2218 - 0.5*t1944*var2[0] - 0.5*t2212*var2[1] - 0.5*t2208*var2[5] - 0.5*t2204*var2[6]) + var2[1]*(-0.5*t2212*var2[2] - 0.5*t2243*var2[5] - 0.5*t2243*var2[6]);
  p_output1[2]=-12.259557000000001*(-0.000042*t1413 - 0.007972*t1420) + t2286 + t2339 + t2419 + t2472 + t1623*var2[0] + t1806*var2[0] + t1882*var2[0] + t2065*var2[0] + t2101*var2[1] + t2169*var2[1] + t2200*var2[1] + t2268*var2[1] + (-0.5*t1470*var2[0] - 0.5*t2070*var2[1])*var2[2] + (0.5*t1470*var2[0] + 0.5*t2070*var2[1])*var2[2] + (-0.5*t1604*var2[0] - 0.5*t2090*var2[1])*var2[2] + (0.5*t1604*var2[0] + 0.5*t2090*var2[1])*var2[2] + (-0.5*t1701*var2[0] - 0.5*t2118*var2[1])*var2[2] + (0.5*t1701*var2[0] + 0.5*t2118*var2[1])*var2[2] + (-0.5*t1863*var2[0] - 0.5*t2189*var2[1])*var2[2] + (0.5*t1863*var2[0] + 0.5*t2189*var2[1])*var2[2] + (-0.5*t1960*var2[0] - 0.5*t2217*var2[1])*var2[2] + (0.5*t1960*var2[0] + 0.5*t2217*var2[1])*var2[2] + var2[0]*(t2314 + t2315 + t2316 + 0.5*t1604*var2[2]) + var2[0]*(t2447 + t2448 + t2449 + 0.5*t1863*var2[2]) + var2[1]*(t2300 + t2301 + t2302 + 0.5*t2090*var2[2]) + var2[1]*(t2433 + t2434 + t2435 + 0.5*t2189*var2[2]) + (t2296 + t2297)*var2[3] + t2399*var2[3] + (0.5*t1663*var2[0] + 0.5*t2109*var2[1])*var2[3] - 0.5*t2294*var2[2]*var2[3] - 0.5*t2290*Power(var2[3],2) + var2[3]*(-0.5*t1618*var2[0] - 0.5*t2096*var2[1] - 0.5*t2294*var2[2] - 0.5*t2290*var2[3]) + t2391*var2[4] + (0.5*t1644*var2[0] + 0.5*t2105*var2[1])*var2[4] + (t2390 - 0.5*t1800*var2[0] - 0.5*t2163*var2[1] - 0.5*t2408*var2[2] - 0.5*t2397*var2[3])*var2[4] + var2[0]*(0.5*t1672*var2[0] + 0.5*t1685*var2[1] + 0.5*t1701*var2[2] + 0.5*t1663*var2[3] + 0.5*t1644*var2[4]) + var2[1]*(0.5*t1685*var2[0] + 0.5*t2113*var2[1] + 0.5*t2118*var2[2] + 0.5*t2109*var2[3] + 0.5*t2105*var2[4]) + var2[3]*(t2377 - 0.5*t1781*var2[0] - 0.5*t2156*var2[1] - 0.5*t2382*var2[2] - 0.5*t2372*var2[4]) + var2[2]*(-0.5*t2382*var2[3] - 0.5*t2408*var2[4]) + (t2429 + t2430)*var2[5] + t2532*var2[5] + (0.5*t1922*var2[0] + 0.5*t2208*var2[1])*var2[5] - 0.5*t2427*var2[2]*var2[5] - 0.5*t2423*Power(var2[5],2) + var2[5]*(-0.5*t1877*var2[0] - 0.5*t2195*var2[1] - 0.5*t2427*var2[2] - 0.5*t2423*var2[5]) + t2524*var2[6] + (0.5*t1903*var2[0] + 0.5*t2204*var2[1])*var2[6] + (t2523 - 0.5*t2059*var2[0] - 0.5*t2262*var2[1] - 0.5*t2541*var2[2] - 0.5*t2530*var2[5])*var2[6] + var2[0]*(0.5*t1931*var2[0] + 0.5*t1944*var2[1] + 0.5*t1960*var2[2] + 0.5*t1922*var2[5] + 0.5*t1903*var2[6]) + var2[1]*(0.5*t1944*var2[0] + 0.5*t2212*var2[1] + 0.5*t2217*var2[2] + 0.5*t2208*var2[5] + 0.5*t2204*var2[6]) + var2[5]*(t2510 - 0.5*t2040*var2[0] - 0.5*t2255*var2[1] - 0.5*t2515*var2[2] - 0.5*t2505*var2[6]) + var2[2]*(-0.5*t2515*var2[5] - 0.5*t2541*var2[6]);
  p_output1[3]=t2286 + t2339 + t1536*var2[0] + t1740*var2[0] + t2077*var2[1] + t2139*var2[1] + t2399*var2[2] + (t2552 + t2553)*var2[2] + (-0.5*t1663*var2[0] - 0.5*t2109*var2[1])*var2[2] + var2[0]*(t2314 + t2315 + t2316 + 0.5*t1618*var2[2]) + var2[1]*(t2300 + t2301 + t2302 + 0.5*t2096*var2[2]) - 0.5*t2290*var2[2]*var2[3] + (t2552 + t2553 - 0.5*t2290*var2[2])*var2[3] + (t2296 + t2297 + 0.5*t2290*var2[2])*var2[3] + (-0.5*t1721*var2[0] - 0.5*t2133*var2[1] - 0.5*t2376*var2[2])*var2[3] + (0.5*t1721*var2[0] + 0.5*t2133*var2[1] + 0.5*t2376*var2[2])*var2[3] + var2[0]*(t2612 + t2614 + t2615 + 0.5*t1781*var2[2] + 0.5*t1721*var2[3]) + var2[1]*(t2605 + t2607 + t2608 + 0.5*t2156*var2[2] + 0.5*t2133*var2[3]) + var2[2]*(0.5*t1618*var2[0] + 0.5*t2096*var2[1] + 0.5*t2294*var2[2] + 0.5*t2290*var2[3]) + (t2590 + t2591 + 0.5*t2372*var2[2])*var2[4] - 0.5*t2582*var2[3]*var2[4] - 0.5*t2578*Power(var2[4],2) + var2[2]*(0.5*t1781*var2[0] + 0.5*t2156*var2[1] + 0.5*t2382*var2[2] + 0.5*t2376*var2[3] + 0.5*t2372*var2[4]) + var2[4]*(-0.5*t1738*var2[0] - 0.5*t2137*var2[1] - 0.5*t2397*var2[2] - 0.5*t2582*var2[3] - 0.5*t2578*var2[4]);
  p_output1[4]=-1.4709113999999999*(0.16*t1490*t1625 - 0.16*t1508*t1627 - 0.022663*(-1.*t1508*t1625 + t2331) - 0.167371*(-1.*t1508*t1627 + t2334)) + t1716*var2[0] + t2128*var2[1] + t2391*var2[2] + (-0.5*t1644*var2[0] - 0.5*t2105*var2[1])*var2[2] + (t2652 + t2653 - 0.5*t2372*var2[2])*var2[3] + var2[0]*(t2612 + t2614 + t2615 + 0.5*t1800*var2[2] + 0.5*t1738*var2[3]) + var2[1]*(t2605 + t2607 + t2608 + 0.5*t2163*var2[2] + 0.5*t2137*var2[3]) - 0.5*t2578*var2[3]*var2[4] + (t2652 + t2653 - 0.5*t2389*var2[2] - 0.5*t2578*var2[3])*var2[4] + (t2590 + t2591 + 0.5*t2389*var2[2] + 0.5*t2578*var2[3])*var2[4] + var2[2]*(0.5*t1800*var2[0] + 0.5*t2163*var2[1] + 0.5*t2408*var2[2] + 0.5*t2397*var2[3] + 0.5*t2389*var2[4]) + var2[3]*(0.5*t1738*var2[0] + 0.5*t2137*var2[1] + 0.5*t2397*var2[2] + 0.5*t2582*var2[3] + 0.5*t2578*var2[4]);
  p_output1[5]=t2419 + t2472 + t1821*var2[0] + t1999*var2[0] + t2176*var2[1] + t2238*var2[1] + t2532*var2[2] + (t2691 + t2692)*var2[2] + (-0.5*t1922*var2[0] - 0.5*t2208*var2[1])*var2[2] + var2[0]*(t2447 + t2448 + t2449 + 0.5*t1877*var2[2]) + var2[1]*(t2433 + t2434 + t2435 + 0.5*t2195*var2[2]) - 0.5*t2423*var2[2]*var2[5] + (t2691 + t2692 - 0.5*t2423*var2[2])*var2[5] + (t2429 + t2430 + 0.5*t2423*var2[2])*var2[5] + (-0.5*t1980*var2[0] - 0.5*t2232*var2[1] - 0.5*t2509*var2[2])*var2[5] + (0.5*t1980*var2[0] + 0.5*t2232*var2[1] + 0.5*t2509*var2[2])*var2[5] + var2[0]*(t2751 + t2753 + t2754 + 0.5*t2040*var2[2] + 0.5*t1980*var2[5]) + var2[1]*(t2744 + t2746 + t2747 + 0.5*t2255*var2[2] + 0.5*t2232*var2[5]) + var2[2]*(0.5*t1877*var2[0] + 0.5*t2195*var2[1] + 0.5*t2427*var2[2] + 0.5*t2423*var2[5]) + (t2729 + t2730 + 0.5*t2505*var2[2])*var2[6] - 0.5*t2721*var2[5]*var2[6] - 0.5*t2717*Power(var2[6],2) + var2[2]*(0.5*t2040*var2[0] + 0.5*t2255*var2[1] + 0.5*t2515*var2[2] + 0.5*t2509*var2[5] + 0.5*t2505*var2[6]) + var2[6]*(-0.5*t1997*var2[0] - 0.5*t2236*var2[1] - 0.5*t2530*var2[2] - 0.5*t2721*var2[5] - 0.5*t2717*var2[6]);
  p_output1[6]=-1.4709113999999999*(0.16*t1812*t1884 - 0.16*t1816*t1886 - 0.022659*(-1.*t1816*t1884 + t2464) - 0.167368*(-1.*t1816*t1886 + t2467)) + t1975*var2[0] + t2227*var2[1] + t2524*var2[2] + (-0.5*t1903*var2[0] - 0.5*t2204*var2[1])*var2[2] + (t2791 + t2792 - 0.5*t2505*var2[2])*var2[5] + var2[0]*(t2751 + t2753 + t2754 + 0.5*t2059*var2[2] + 0.5*t1997*var2[5]) + var2[1]*(t2744 + t2746 + t2747 + 0.5*t2262*var2[2] + 0.5*t2236*var2[5]) - 0.5*t2717*var2[5]*var2[6] + (t2791 + t2792 - 0.5*t2522*var2[2] - 0.5*t2717*var2[5])*var2[6] + (t2729 + t2730 + 0.5*t2522*var2[2] + 0.5*t2717*var2[5])*var2[6] + var2[2]*(0.5*t2059*var2[0] + 0.5*t2262*var2[1] + 0.5*t2541*var2[2] + 0.5*t2530*var2[5] + 0.5*t2522*var2[6]) + var2[5]*(0.5*t1997*var2[0] + 0.5*t2236*var2[1] + 0.5*t2530*var2[2] + 0.5*t2721*var2[5] + 0.5*t2717*var2[6]);
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 7 && ncols == 1) && 
      !(mrows == 1 && ncols == 7))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 7 && ncols == 1) && 
      !(mrows == 1 && ncols == 7))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 7, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE
#include "CGvec_five_link_walker.hh"


namespace SymFunction
{

void CGvec_five_link_walker_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
